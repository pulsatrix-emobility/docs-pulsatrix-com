"use strict";(self.webpackChunkdocs_pulsatrix_com=self.webpackChunkdocs_pulsatrix_com||[]).push([[616],{1901:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"backend/index","title":"API","description":"The User API supports three different protocols that can be used to communicate with the pulsatrix charging station controller. We provide a RESTful API, a WebSocket API and a MQTT API. While REST and Websocket offer similar endpoints and data types, MQTT uses a message- and topic-based model with some additional data.","source":"@site/docs/backend/index.mdx","sourceDirName":"backend","slug":"/backend/","permalink":"/docs/backend/","draft":false,"unlisted":false,"editUrl":"https://github.com/pulsatrix-emobility/docs-pulsatrix-com/docs/backend/index.mdx","tags":[],"version":"current","frontMatter":{}}');var a=s(4848),i=s(8453);const r={},o="API",d={},c=[{value:"RESTful API",id:"restful-api",level:2},{value:"WebSocket API",id:"websocket-api",level:2},{value:"MQTT API",id:"mqtt-api",level:2},{value:"Solar surplus charging",id:"solar-surplus-charging",level:2}];function l(e){const t={a:"a",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"api",children:"API"})}),"\n",(0,a.jsx)(t.p,{children:"The User API supports three different protocols that can be used to communicate with the pulsatrix charging station controller. We provide a RESTful API, a WebSocket API and a MQTT API. While REST and Websocket offer similar endpoints and data types, MQTT uses a message- and topic-based model with some additional data."}),"\n",(0,a.jsx)(t.h2,{id:"restful-api",children:"RESTful API"}),"\n",(0,a.jsxs)(t.p,{children:["We provide a high-level ",(0,a.jsx)(t.a,{href:"/docs/rest-ws-api",children:(0,a.jsx)(t.strong,{children:"documentation for the RESTful API"})}),". Additionally, there is an ",(0,a.jsx)(t.a,{href:"/user-api/swagger",children:(0,a.jsx)(t.strong,{children:"OpenAPI/Swagger-based"})})," documentation available which is suitable for client code generation."]}),"\n",(0,a.jsx)(t.h2,{id:"websocket-api",children:"WebSocket API"}),"\n",(0,a.jsxs)(t.p,{children:["The WebSocket API uses the same DTOs as the RESTful API and is ",(0,a.jsx)(t.a,{href:"/docs/rest-ws-api",children:(0,a.jsx)(t.strong,{children:"documented alongside of it"})})]}),"\n",(0,a.jsx)(t.h2,{id:"mqtt-api",children:"MQTT API"}),"\n",(0,a.jsxs)(t.p,{children:["The MQTT API is based on topics and messages. You can find its details ",(0,a.jsx)(t.a,{href:"/docs/mqtt-api",children:(0,a.jsx)(t.strong,{children:"here"})})]}),"\n",(0,a.jsx)(t.h2,{id:"solar-surplus-charging",children:"Solar surplus charging"})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>o});var n=s(6540);const a={},i=n.createContext(a);function r(e){const t=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);